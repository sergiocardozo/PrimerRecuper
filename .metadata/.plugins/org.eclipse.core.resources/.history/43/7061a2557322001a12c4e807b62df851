#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "utn.h"
#include "parser.h"
#include "Linkedlist.h"
#include "eComputer.h"


int controller_loadFromText(char* path , LinkedList* pArrayListEmployee)
{
	FILE* pFile;
	int retorno = -1;
	if(pArrayListEmployee != NULL)
	{
		pFile = fopen(path,"r+");
		if(pFile != NULL)
		{
			parser_parseComputer(pFile , pArrayListEmployee);
			fclose(pFile);
			retorno = 0;
		}
	}
	return retorno;
}

/** \brief Ordenar empleados
 *
 * \param path char*
 * \param pArrayListEmployee LinkedList*
 * \return int
 *
 */
int controller_sortComputer(LinkedList* pArrayListComputer)
{
	int retorno = -1;
    if(pArrayListComputer != NULL)
    {
    	ll_sort(pArrayListComputer,computer_sort,1);
    	retorno = 0;
    }
	return retorno;
}

/** \brief Listar empleados
 *
 * \param path char*
 * \param pArrayListEmployee LinkedList*
 * \return int
 *><
 */
int controller_ListComputer(LinkedList* pArrayListComputer)
{
	eComputer* pComputer;
	int retorno=-1;
	int i;
	int auxId;
	char auxDesc[199];
	int auxPrecio;
	int auxIdTipo;
	char auxOferta[49];
	char auxTipoDesc[20];
	if(pArrayListComputer!=NULL)
	{
		printf("\nId,Descripcion,Precio,IdTipo,Oferta");
		for(i=0;i<ll_len(pArrayListComputer);i++)
		{
			pComputer = ll_get(pArrayListComputer,i);
			strcpy(auxDesc,pComputer->descripcion);
			strcpy(auxOferta,pComputer->oferta);
			computer_getId(pComputer,&auxId);
			computer_getDescripcion(pComputer,auxDesc);
			computer_getPrecio(pComputer,&auxPrecio);
			computer_getIdTipo(pComputer,&auxIdTipo);
			computer_getOferta(pComputer,auxOferta);
			if(auxIdTipo==1)
				strcpy(auxTipoDesc,"DESKTOP");
			else
				strcpy(auxTipoDesc,"LAPTOP");
			printf("\n%d %s %d %s %s\n",auxId,auxDesc,auxPrecio,auxTipoDesc,auxOferta);
			retorno = 0;
		}
	}
	return retorno;
}

int controller_map(LinkedList* pArrayListComputer)
{
	int retorno = -1;

	if(pArrayListComputer)
	{
		ll_map(pArrayListComputer,computer_mappeado);
		retorno = 0;
	}
	return retorno;
}

int controller_saveAsText(char* path, LinkedList* pArrayListComputer)
{
	FILE *pFile;
	Entidad *aux;
	int id;
	char descrip[100];
	int precio;
	int idTipo;
	char oferta[30];
	int retorno = -1;
	int i;

	pFile = fopen(path, "w+");
	fprintf(pFile, "ID,Descripcion,Precio,Tipo,Oferta\n");
	for (i = 0; i < ll_len(pArrayListComputer); i++) {

		aux = (Entidad*) ll_get(pArrayListComputer, i);
		strcpy(descrip,aux->descripcion);
		entidad_usarGets(aux,&id,descrip,&precio,&idTipo,oferta);
		fprintf(pFile, "%d,%s,%d,%d,%s\n", id, descrip, precio, idTipo,oferta);
		retorno = 0;
	}

	fclose(pFile);

	return retorno;

}
